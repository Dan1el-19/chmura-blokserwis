steps:

  #Krok diagnostyczny 
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "--- Zmienne srodowiskowe widoczne dla kroku budowania ---"
        printenv | sort
        echo "--- Koniec listy zmiennych ---"

  # KROK 1: Budowanie obrazu Dockera z unikalnym tagiem
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--tag'
      - 'europe-central2-docker.pkg.dev/$PROJECT_ID/chmura-blokserwis-nextjs/app:$SHORT_SHA'
      - '.'
    env:
      - 'NEXT_PUBLIC_FIREBASE_API_KEY=${_NEXT_PUBLIC_FIREBASE_API_KEY}'
      - 'NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${_NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}'
      - 'NEXT_PUBLIC_FIREBASE_PROJECT_ID=${_NEXT_PUBLIC_FIREBASE_PROJECT_ID}'
      - 'NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${_NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}'
      - 'NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${_NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}'
      - 'NEXT_PUBLIC_FIREBASE_APP_ID=${_NEXT_PUBLIC_FIREBASE_APP_ID}'

  # KROK 2: Wdro≈ºenie obrazu na Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'chmura-blokserwis-app'
      - '--image'
      - 'europe-central2-docker.pkg.dev/$PROJECT_ID/chmura-blokserwis-nextjs/app:$SHORT_SHA'
      - '--region'
      - 'europe-central2'
      - '--platform'
      - 'managed'
      
#options
options:
  logging: CLOUD_LOGGING_ONLY

# Ta sekcja automatycznie wypycha obraz do Artifact Registry po kroku budowania
images:
  - 'europe-central2-docker.pkg.dev/$PROJECT_ID/chmura-blokserwis-nextjs/app:$SHORT_SHA'
